@page
@model TMDT.Areas.Identity.Pages.Account.Manage.ReportModel
@{
    ViewData["Title"] = "Báo cáo bán hàng";
    ViewData["ActivePage"] = ManageNavPages.Report;

    Dictionary<string, float> dailyRevenue = new Dictionary<string, float>(); // Đối tượng lưu trữ tổng doanh thu của từng ngày
    Dictionary<string, int> QuantitySold = new Dictionary<string, int>();

    foreach (var cb in Model.Donhangs)
    {
        if (cb.Createtime.HasValue)
        {
            // Lấy ngày tháng năm của đơn hàng (short date string)
            string dateKey = cb.Createtime.Value.Date.ToShortDateString();

            // Kiểm tra xem đã có tổng doanh thu cho ngày này chưa, nếu chưa thì khởi tạo bằng 0
            if (!dailyRevenue.ContainsKey(dateKey))
            {
                dailyRevenue[dateKey] = 0;
            }

            // Cộng tổng doanh thu của đơn hàng vào ngày tương ứng
            dailyRevenue[dateKey] += cb.price;
        }
    }

    foreach (var dh in Model.Donhangs)
    {
        foreach (var dh2 in dh.ProductOrders)
        {
            var spname = dh2.Name;
            if (!QuantitySold.ContainsKey(spname))
            {
                QuantitySold[spname] = 0;
            }
            foreach (var pr in Model.products)
            {
                if (pr.Name == spname)
                {
                    QuantitySold[spname] += dh2.Number;
                }
            }
        }
    }

}


<div class="row">
    <div class="col-md-6">
        <h4>Thông tin doanh thu và sản phẩm đã bán</h4>

        <p>Email: @Model.Email</p>

        @if (Model.IsEmailConfirmed)
        {
            <p>Email đã xác nhận</p>
        }
       
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-8">
        <h4>Biểu đồ doanh thu theo thời gian</h4>
        <canvas id="revenueChart" width="400" height="200"></canvas>
    </div>
</div>
<br />
<div>
    <table>
        <tr>
            <th>Tên sản phẩm</th>
            <th>Đã bán</th>
        </tr>
        @foreach (var item in QuantitySold)
        {
            <tr>
                <td>@item.Key</td>
                <td>@item.Value</td>
            </tr>
        }
    </table>
</div>


<div>
    <button class="btn" >Gui Bao Cao</button>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const dates = @Html.Raw(Json.Serialize(Model.Donhangs.Select(cb => cb.Createtime.HasValue ? cb.Createtime.Value.Date.ToShortDateString() : "N/A").Distinct().ToList()));
        const revenues = @Html.Raw(Json.Serialize(dailyRevenue.Values.ToList()));

        const ctx = document.getElementById('revenueChart').getContext('2d');
        const purchasesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: dates, // Sử dụng các ngày đã lọc để làm nhãn trục x
                datasets: [{
                    label: 'Doanh thu hàng ngày',
                    data: revenues, // Sử dụng mảng tổng doanh thu
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        type: 'category'
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.yLabel.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                            }
                        }
                    }
                }
            }
        });
    </script>
}
